//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;


namespace AssemblyCSharp
{
	public class SaveMoveStatusEffect : StatusEffect3
	{
		GeekPhysicsC physics;
		
		public float prevFriction;
		public Vector2 prevMaxVelocity;
		
		
		
		override protected void Start()
		{
			base.Start();

			print("----Save move status effect----");
			addMessageListener( args => reset(), 
			                   SaveMoveResetC.M_SAVEMOVE_BOUND_PASSED);

			physics = GetComponent<GeekPhysicsC>();
			renderer.enabled = true;
			propertyValues.Add( (int)SamudaiStatusProperties.MAX_VELOCITY, physics.maxVelocity );
			propertyValues.Add( (int)SamudaiStatusProperties.COLLISION_ENABLED, GetComponent<Collider2D>().isTrigger );
			
			base.Start();
			
			manager.registerBaseValue( this, SamudaiStatusProperties.MAX_VELOCITY, physics.maxVelocity );
			manager.registerBaseValue( this, SamudaiStatusProperties.COLLISION_ENABLED, GetComponent<Collider2D>().isTrigger );

			physics.maxVelocity = new Vector2(1000f,1000f); //?? how much?? - not sure, but I noticed it is not always reset =[
			GetComponent<Collider2D>().isTrigger = true;
		}
		
		override public void reset()
		{
			base.reset();
			
			if( manager.valueModifiers( SamudaiStatusProperties.MAX_VELOCITY ) <=1) 
				physics.maxVelocity = (Vector2)manager.getBaseValue( SamudaiStatusProperties.MAX_VELOCITY );
			
			if( manager.valueModifiers( SamudaiStatusProperties.COLLISION_ENABLED) <=1) 
				GetComponent<Collider2D>().isTrigger = (bool)manager.getBaseValue( SamudaiStatusProperties.COLLISION_ENABLED );

		}
	}
}

