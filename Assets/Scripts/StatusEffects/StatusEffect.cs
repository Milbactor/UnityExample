//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;


namespace AssemblyCSharp
{
	public enum STATUS_EFFECTS
	{
		GRAVITY,
		MOVEMENT,
		MOVEMENT_SPEED
	}
	
	[RequireComponent (typeof (StatusEffectManager))]
	public class StatusEffect : TimedScript
	{
		public Dictionary<StatusEffect, object> resetValue;
		
		public static string M_STATUS_END = "M_STATUS_END";
		public static string M_STATUS_ENDED = "M_STATUS_ENDED";
		public List<STATUS_EFFECTS> effectedProperties;
		
		protected StatusEffectManager manager;
		
		public bool extendOnStack = false;
		
		protected StatusEffect earliestInstance
		{
			get{ return manager.getEarliestEffect( this.GetType() ); }
		}
		
		override protected void Start()
		{
			base.Start();
			
			effectedProperties = new List<STATUS_EFFECTS>();
			resetValue = new Dictionary<StatusEffect, object>();
			
			manager = GetComponent<StatusEffectManager>();
			manager.Register( this );
			
			//print ("added new knockbackstatus: " + this.GetType().Name );
		}
		
		public void extend( float time = 0 )
		{
			timer.duration += duration;
		}
		
		public virtual void reset()
		{
			manager.RemoveEffect( this );
			if( manager.containsSameType( GetType() ) ) return;
		}
		
		override protected void HandleonElapsed( LiteTimer timer)
		{
			Destroy( this );
		}
		
		override protected void Update()
		{
			base.Update();
		}

		/*void OnDisable()
		{
			dispatchMessage(M_STATUS_ENDED, this );
			reset();
		} */
		
		void OnDestroy()
		{
			dispatchMessage(M_STATUS_ENDED, this );
			reset();
		}
		
	}
}

