//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Collections.Generic;


namespace AssemblyCSharp
{
	public class ResourcePool
	{
		public static Dictionary<string, ResourcePool> pools = new Dictionary<string, ResourcePool>();
		
	
		List< GameObject > objects;
		private string resource;
		
		public ResourcePool ( string resource)
		{
			this.resource = resource;
			objects = new List<GameObject>();
			
			for( int i = 0; i < 10; i++ )
			{
				objects.Add( Resources.Load( resource ) as GameObject);
			}
			
			pools.Add( resource, this );
		}
		
		public GameObject getItem()
		{
			if( objects.Count <= 1 ) 
			{
				supply();
			}
			
			GameObject obj = objects[ objects.Count - 1];
			objects.Remove( obj );
			return obj;
		}
		
		private void supply()
		{
			for( int i = 0; i < 10; i++ )
			{
				objects.Add( Resources.Load( resource ) as GameObject );
			}
		}
		
		public void depost( GameObject obj )
		{
			objects.Add( obj );
		}
		
		
		public static ResourcePool getPool( string resource)
		{
			if( pools.ContainsKey( resource ) )
			{
				return pools[ resource ];
			}
			
			return null;
		}
	}
}

