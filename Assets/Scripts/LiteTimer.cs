//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;


namespace AssemblyCSharp
{
	public class LiteTimer
	{
		public delegate void OnElapsed( LiteTimer timer);
		public event OnElapsed onElapsed;
		
		public float duration = 0;
		private float _time = 0;
		
		private static float prevTime = 0f;
		private float deltaTime;
		
		public float time{ get{ return _time; } }
		
		public bool playing = false;
		public bool resetOnFinish = true;
		
		/// <summary>
		/// 		/// </summary>
		/// <param name="duration">Duration in seconds</param>
		public LiteTimer ( float duration )
		{
			this.duration = duration;
		}
		
		public void Update()
		{
			if (Time.timeScale > 0f) {
				deltaTime = Time.deltaTime / Time.timeScale;
			} else {
				deltaTime = Time.realtimeSinceStartup - prevTime;
			}
			
			prevTime = Time.realtimeSinceStartup;
			if( playing == false ) return;
			
			_time += deltaTime;//Time.deltatime
			
			if ( _time >= duration) 
			{
				if(resetOnFinish) { _time = 0; }
					
				playing = false;
				if(onElapsed != null )onElapsed( this );
			}
		
		}
		
		public void stop()
		{
			playing = false;
			_time = 0;
		}
		
		public void pause()
		{
			playing = false;
		}
		
		public void start()
		{
			_time = 0;
			playing = true;
		}
	}
}

