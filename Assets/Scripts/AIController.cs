//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;


namespace AssemblyCSharp
{
	public enum AIMODE
	{
		NONE,
		FOLLOW,
		ATTACK
	}

	public class AIController : GeekBehaviour
	{
		public AIMODE aiMode = AIMODE.FOLLOW;
		int attackCounter = 0;
		GameObject player;
		
		void Start()
		{
			base.Start();
			
			player = GameObject.Find("Hero");
		}
		
		void Update()
		{
			base.Update();
			
			//temp for debugging
			if( Input.GetKeyDown( KeyCode.Q))
			{
				foreach(string key in dispatcher.listeners.Keys)
				{
					print ("[ " + key + " ]");
				}
			}
			
			if( aiMode == AIMODE.FOLLOW )
			{
			
				Vector2 playerDistance = new Vector2(
					Mathf.Abs( player.transform.position.x - transform.position.x ),
					Mathf.Abs( player.transform.position.y - transform.position.y )
				);
				
				if( playerDistance.magnitude > 0.5 ) //he needs to score on the right
				{
					
					if( transform.position.x > player.transform.position.x )
					{
						dispatchMessage( PlayerMovementC.MOVE_LEFT );
					}
					else
					{
						dispatchMessage( PlayerMovementC.MOVE_RIGHT );
					}
			
				}
				
				else
				{
					anim.SetBool("X_INPUT", false );
				}
				
			}
			else if( aiMode == AIMODE.ATTACK )
			{
				attackCounter++;
				
				if( attackCounter > 90 ||  Input.GetKeyDown( KeyCode.T))  //Z for testing purposes
				{
					attackCounter = 0;
					dispatchMessage( SlashC.M_SLASH );
				}
				else
				{
					dispatchMessage( SlashC.M_SLASH_START);
				}
			}
		}
		
	
		
		
	}
}

