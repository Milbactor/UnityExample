//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;


namespace AssemblyCSharp
{
	public class GeekLevel : GeekBehaviour
	{
		public SuddenDeath suddenDeath;
		LiteTimer suddenDeathTimer;
		public float suddenDeathTime = 60f;
	

		protected override void Start()
		{
			base.Start();

			foreach( string ghostName in GameData.getGhostsForCurrentLevel() )
			{
				print ("spawning ghost: " + ghostName + " from owner: " +  ghostName.Split('G')[0]);
				GameObject ghost = Instantiate(Resources.Load( ghostName ) ) as GameObject;
				LevelBounds bounds = LevelBounds.instance;
				ghost.transform.position = new Vector3( UnityEngine.Random.Range( - bounds.bounds.width / 2, bounds.bounds.width / 2), 
				                                       -bounds.bounds.height / 2, bounds.bounds.height / 2 ); 
				
				GameObject ghostOwner = GameObject.Find( ghostName.Split('G')[0] );
				GameObject character = GameManager.instance.GetOtherPlayers( ghostOwner)[0];
				ghost.GetComponent<BoidC>().target = character;
				ghost.GetComponent<BoidC>().targetName = character.name;
				
				print ("ghost target: " + character.name );
				
				
			}

			foreach(Corpse corpseObj in GameData.getCorpsesForCurrentLevel() )
			{
				print ("spawning corpse: " + corpseObj.playerName);
				if(Application.loadedLevelName == "level4")
				{
				//	GameObject iceCorpse = Instantiate(Resources.Load( "IceCorpse" + corpseObj.playerName ) ) as GameObject;
				//	iceCorpse.transform.position = 
				//		new Vector3(corpseObj.x, corpseObj.y, 0);
				}
				else 
				{
					GameObject corpse = Instantiate(Resources.Load( "Corpse" + corpseObj.playerName ) ) as GameObject;
					corpse.transform.position = 
						new Vector3(corpseObj.x, corpseObj.y, 0);
					corpse.GetComponent<Animator>().SetBool("choice", corpseObj.choice);
				}
			}
			
			if( suddenDeath != null )
			{
				suddenDeathTimer = new LiteTimer( suddenDeathTime );
				suddenDeathTimer.start();
				suddenDeathTimer.onElapsed += ActivateSuddenDeath;
			}
		}

		void ActivateSuddenDeath (LiteTimer timer)
		{
			suddenDeath.Activate();
		}
		
		protected override void Update()
		{
			base.Update();
			
			if (suddenDeath != null)suddenDeathTimer.Update();
		}
	}
}

